//Router.js
//All the routes for our app
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //HOOKERS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Unregistered
let requireUnregistered= function(){
  if(Meteor.user()){
    if(Meteor.user().roles[0]==="unregistered"){
      this.next();
    }
    else{
      Router.go("dashboard");
      Bert.alert("You've been redirected here because only unregistered users can go there.", "info");
    }
  }
  else{
    this.next();
  }
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

let requireUnregisteredUser= function(){
  if(Meteor.user()){
    if(Meteor.user().roles[0] === "unregistered"){
      this.next();
    }
    else{
      Route.go("dashboard");
      Bert.alert("You've been redirected here because only unregistered users can go there.", "info");

    }
  }
  else{
    this.next();
  }
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
let requireRegisteredUser= function(){
  if(Meteor.user()){
    if(Meteor.user().roles[0]=== "unregistered"){
      Meteor.logout();
      Router.go("register");
      Bert.alert("You've been redirected here because only registered users can go there.", "info");

    }
    else{
      this.next();
    }
  }
  else{
    Router.go("login");
    Bert.alert("You've been redirected here because only registered users can go there.", "info");

  }
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
let requireAdminUser= function(){
  if(Meteor.user()){
    if(Meteor.user().roles[0]=== "unregistered"){
      Meteor.logout();
      Router.go("register");
      Bert.alert("You've been redirected here because only registered tutors can go there.", "info");

    }
    else{
      if(Meteor.user().roles[0]=== "student" || Meteor.user().roles[0]=== "educator" || Meteor.user().roles[0]=== "coordinator" ){
        Router.go("dashboard");
        Bert.alert("You've been redirected here because only registered tutors can go there.", "info");

      }
      else{
        if(Meteor.user().isAuthorized === true){
          this.next();
        }
        else{
          Router.go("access-forbidden");
          Bert.alert("You've been redirected here because only registered tutors can go there.", "info");
        }
      }
    }
  }
  else{
    Router.go("login");
    Bert.alert("You've been redirected here because only registered tutors can go there.", "info");

  }
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
let requireAuthorizedUser= function(){
  if(Meteor.user()){ //user connected
    if(Meteor.user().roles[0]=== "unregistered"){ //ghost account => FORBIDDEN
      Meteor.logout(); //logout the user
      Router.go("register"); //user redirected to register page
      Bert.alert("You've been redirected here because only registered users can go there.", "info"); //display message to inform user
    }
    else{ //user connected, registered and authorized
      if(Meteor.user().isAuthorized === true){ //authorized user
        this.next(); //continue
      }
      else{ //connected, registered but unau
        Router.go("access-forbidden"); //user redirected to a "access" forbidden" page
        Bert.alert("You've been redirected here because only authorized users can go there.", "info"); //display message to inform user

      }
    }
  }
  else{
    Router.go("login"); //user redirected to login page
    Bert.alert("You've been redirected here because only registered users can go there.", "info"); //display message to inform user

  }
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
let requireUnauthorizedUser= function(){
  if(Meteor.user()){
    if(Meteor.user().roles[0]=== "unregistered"){
      Meteor.logout();
      Router.go("register");
      Bert.alert("You've been redirected here because only registered users can go there.", "info");

    }
    else{
      if(Meteor.user().isAuthorized === false){
        this.next();
      }
      else{
        Router.go("dashboard");
        Bert.alert("You've been redirected here because only unauthorized users can go there.", "info");
      }
    }
  }
  else{
    Router.go("login");
    Bert.alert("You've been redirected here because only logged in users can go there.", "info");

  }
};
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //LAYOUTS - full page
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.configure({
  layoutTemplate:"fullpagelayout",
  notFoundTemplate: "pageNotFound"

});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //LAYOUTS - app
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.configure({
  layoutTemplate:"applayout"
});

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - home
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/',  function () {
  this.layout('fullpagelayout');
  this.render("pageLogin");
  this.render('loginTitle', {to: 'title'});
  this.render('loginDescription', {to: 'description'});
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - sandbox
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/sandbox', function(){
  this.layout('applayout');
  this.render('pageSandbox');
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/sandbox-forms', function(){
  this.layout('applayout');
  this.render('pageSandboxForms');
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/sandbox-search', function(){
  this.layout('applayout');
  this.render('pageSandboxSearch');
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - login
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/login',function () {
  this.layout('fullpagelayout');
  this.render("pageLogin");
  this.render('loginTitle', {to: 'title'});
  this.render('loginDescription', {to: 'description'});

}, {
  name:"login"
  //,onBeforeAction: requireUnregistered
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - register
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/register',function () {
  this.layout('fullpagelayout');
  this.render("pageRegister");
  this.render('registerTitle', {to: 'title'});
  this.render('registerDescription', {to: 'description'});

}, {
  name:"register"//,onBeforeAction: requireUnregistered
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - password forgotten
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/password-forgotten',function () {
  this.layout('fullpagelayout');
  this.render("pagePasswordForgotten");
  this.render('passwordForgottenTitle', {to: 'title'});
  this.render('passwordForgottenDescription', {to: 'description'});

}, {
  name: "password-forgotten", //onBeforeAction: requireUnregistered
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - reset password
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/reset-password/:token',function () {
  this.layout('fullpagelayout');
  this.render("pageResetPassword");
  this.render('resetPasswordTitle', {to: 'title'});
  this.render('resetPasswordDescription', {to: 'description'});

}, {
  onBeforeAction: function() {
    /*
    if(Meteor.user()){
      if(Meteor.user().roles[0]==="unregistered"){
        this.next();
      }
      else{
        Router.go("dashboard");
      }
    }
    else{

    }*/
    Accounts._resetPasswordToken = this.params.token;
    this.next();
  },
  name: "reset-password"
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - access forbidden
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/access-forbidden',function () {
  this.layout('fullpagelayout');
  this.render('accessForbiddenTitle', {to: 'title'});
  this.render('accessForbiddenDescription', {to: 'description'});

}, {
  //onBeforeAction: requireUnauthorizedUser,
   name: "access-forbidden"
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --dashboard
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/dashboard', function(){
  this.layout('applayout');
  this.render("dashboard");
},{
  //onBeforeAction: requireAuthorizedUser,
  name:"dashboard"
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --profile
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/profile/:_id', function(){
  this.layout('applayout');
  this.render('breadcrumbProfile', {
    to: 'breadcrumb',
    data: function(){
      return Meteor.users.findOne({_id: this.params._id});
    }
  });
  this.render('menuTitleUsers', {
    to: 'menuTitle'
  });
  this.render('menuContentUsers', {to:
     'menuContent'
   });
  this.render('contentIndicationsProfile', {
    to: 'contentIndications',
    data: function(){
      return Meteor.users.findOne({_id: this.params._id});
    }
  });
  this.render('contentProfile',{
      data: function(){
        return Meteor.users.findOne({_id: this.params._id}); //data passed to the "contentProfile" template
      }
    });
},{
  //onBeforeAction: requireAuthorizedUser
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --users
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/users', function(){
  this.layout('applayout');
  this.render('menuTitleUsers', {
    to: 'menuTitle'
  });
  this.render('menuContentUsers', {to:
     'menuContent'
   });
  this.render('breadcrumbUsers', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsUsers', {
    to: 'contentIndications'
  });

  this.render('contentUsers');
},{
  name: 'users' //,onBeforeAction: requireAuthorizedUser
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --users /add ? educator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/users/add/educator', function(){
  this.layout('applayout');

  this.render('menuTitleUsers', {
    to: 'menuTitle'
  });
  this.render('menuContentUsers', {to:
     'menuContent'
   });

  this.render('breadcrumbAddEducator', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsAddEducator', {
    to: 'contentIndications'
  });

  this.render('contentAddEducator');
},{
  name: 'add-educator'//,onBeforeAction: requireAdminUser
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --users /add ? coordinator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/users/add/coordinator', function(){
  this.layout('applayout');

  this.render('menuTitleUsers', {
    to: 'menuTitle'
  });
  this.render('menuContentUsers', {to:
     'menuContent'
   });

  this.render('breadcrumbAddCoordinator', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsAddCoordinator', {
    to: 'contentIndications'
  });

  this.render('contentAddCoordinator');
},{
  name: 'add-coordinator'//,onBeforeAction: requireAdminUser

});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --establishments
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/establishments', function(){
  this.layout('applayout');
  this.render('menuTitleEstablishments', {
    to: 'menuTitle'
  });
  this.render('menuContentEstablishments', {to:
     'menuContent'
   });
  this.render('breadcrumbEstablishments', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsEstablishments', {
    to: 'contentIndications'
  });

  this.render('contentEstablishments');
},{
  name: 'establishments' //,onBeforeAction: requireAuthorizedUser
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --establishments /add ? host
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/establishments/add/host', function(){
  this.layout('applayout');

  this.render('menuTitleEstablishments', {
    to: 'menuTitle'
  });
  this.render('menuContentEstablishments', {to:
     'menuContent'
   });

  this.render('breadcrumbAddHost', {
    to: 'breadcrumb'
  });

  this.render('contentIndicationsAddHost', {
    to: 'contentIndications'
  });

  this.render('contentAddHost');
},{
  name: 'add-host'//,onBeforeAction: requireAdminUser
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --establishments /add ? trust
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/establishments/add/trust', function(){
  this.layout('applayout');

  this.render('menuTitleEstablishments', {
    to: 'menuTitle'
  });
  this.render('menuContentEstablishments', {to:
     'menuContent'
   });

  this.render('breadcrumbAddTrust', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsAddTrust', {
    to: 'contentIndications'
  });

  this.render('contentAddTrust');
},{
  name: 'add-trust' //,onBeforeAction: requireAdminUser

});

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --establishment detail
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/establishments/:_id', function(){
  this.layout('applayout');
  this.render('breadcrumbEstablishmentDetails', {
    to: 'breadcrumb',
    data: function(){
      return Establishments.findOne({_id: this.params._id});
    }
  });
  this.render('menuTitleEstablishments', {
    to: 'menuTitle'
  });
  this.render('menuContentEstablishments', {to:
     'menuContent'
   });
  this.render('contentIndicationsEstablishmentDetails', {
    to: 'contentIndications',
    data: function(){
      return Establishments.findOne({_id: this.params._id});
    }
  });
  this.render('contentEstablishmentDetails',{
      data: function(){
        return Establishments.findOne({_id: this.params._id});
      }
    });
},{
  //onBeforeAction: requireAuthorizedUser
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --database
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/database', function(){
  this.layout('applayout');
  this.render('menuTitleDatabase', {
    to: 'menuTitle'
  });
  this.render('menuContentDatabase', {to:
     'menuContent'
   });

  this.render('breadcrumbDatabase', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsDatabase', {
    to: 'contentIndications'
  });

  this.render('contentDatabase');
},{
  name: 'database' //,onBeforeAction: requireAdminUser
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --offers
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/offers', function(){
  this.layout('applayout');
  this.render('menuTitleOffers', {
    to: 'menuTitle'
  });
  this.render('menuContentOffers', {to:
     'menuContent'
   });
  this.render('breadcrumbOffers', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsOffers', {
    to: 'contentIndications'
  });

  this.render('contentOffers');
},{
  name: 'offers' //,onBeforeAction: requireAuthorizedUser
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --offers /add
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/offers/add', function(){
  this.layout('applayout');

  this.render('menuTitleOffers', {
    to: 'menuTitle'
  });
  this.render('menuContentOffers', {to:
     'menuContent'
   });

  this.render('breadcrumbAddOffers', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsAddOffer', {
    to: 'contentIndications'
  });

  this.render('contentAddOffers');
},{
  name: 'add-offer'/*,
  onBeforeAction: function(){
    if(Meteor.user()){
      if(Meteor.user().roles[0]=== "unregistered"){
        Meteor.logout();
        Router.go("register");
      }
      else{
        if(Meteor.user().roles[0]=== "student" || Meteor.user().roles[0]=== "educator" ){
          Router.go("dashboard");
        }
        else{
          if(Meteor.user().isAuthorized === true){
            this.next();
          }
          else{
            Router.go("access-forbidden");
          }
        }
      }
    }
    else{
      Router.go("login");
    }
  }*/
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --offer detail
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/offers/:_id', function(){
  this.layout('applayout');
  this.render('breadcrumbOfferDetails', {
    to: 'breadcrumb',
    data: function(){
      return Offers.findOne({_id: this.params._id});
    }
  });
  this.render('menuTitleOffers', {
    to: 'menuTitle'
  });
  this.render('menuContentOffers', {to:
     'menuContent'
   });
  this.render('contentIndicationsOfferDetails', {
    to: 'contentIndications',
    data: function(){
      return Offers.findOne({_id: this.params._id});
    }
  });
  this.render('contentOfferDetails',{
      data: function(){
        return Offers.findOne({_id: this.params._id});
      }
    });
},{
  //onBeforeAction: requireAuthorizedUser
});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --placements
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/placements', function(){
  this.layout('applayout');

  this.render('menuTitlePlacements', {
    to: 'menuTitle'
  });
  this.render('menuContentPlacements', {to:
     'menuContent'
   });

  this.render('breadcrumbAddPlacement', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsAddPlacement', {
    to: 'contentIndications'
  });

  this.render('contentAddPlacements');
},{
  name: 'placements' //,onBeforeAction: requireAdminUser

});

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --placement add
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/placements/add', function(){
  this.layout('applayout');

  this.render('menuTitlePlacements', {
    to: 'menuTitle'
  });
  this.render('menuContentPlacements', {to:
     'menuContent'
   });

  this.render('breadcrumbAddPlacement', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsAddPlacement', {
    to: 'contentIndications'
  });

  this.render('contentAddPlacements');
},{
  name: 'add-placement' //,onBeforeAction: requireAdminUser

});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --placement detail
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --placements
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/activity', function(){
  this.layout('applayout');

  this.render('menuTitleActivity', {
    to: 'menuTitle'
  });
  this.render('menuContentActivity', {to:
     'menuContent'
   });

  this.render('breadcrumbActivity', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsActivity', {
    to: 'contentIndications'
  });

  this.render('contentActivity');
},{
  name: 'activity' //,onBeforeAction: requireAdminUser

});
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --visits
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/visits', function(){
  this.layout('applayout');

  this.render('menuTitleVisits', {
    to: 'menuTitle'
  });
  this.render('menuContentVisits', {to:
     'menuContent'
   });

  this.render('breadcrumbAddVisit', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsAddVisit', {
    to: 'contentIndications'
  });

  this.render('contentAddVisits');
},{
  name: 'visits' //,onBeforeAction: requireAdminUser

});

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //PAGE - app  --visit add
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Router.route('/app/visits/add', function(){
  this.layout('applayout');

  this.render('menuTitleVisits', {
    to: 'menuTitle'
  });
  this.render('menuContentVisits', {to:
     'menuContent'
   });

  this.render('breadcrumbAddVisit', {
    to: 'breadcrumb'
  });
  this.render('contentIndicationsAddVisit', {
    to: 'contentIndications'
  });

  this.render('contentAddVisits');
},{
  name: 'add-visit' //,onBeforeAction: requireAdminUser

});
